name: Cortex Code Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  cortex-code-scan:
    runs-on: ubuntu-latest

    env:
      CORTEX_API_KEY: ${{ secrets.CORTEX_API_KEY }}
      CORTEX_API_KEY_ID: ${{ secrets.CORTEX_API_KEY_ID }}
      CORTEX_API_URL: ${{ secrets.CORTEX_API_URL }}
      GITHUB_WORKSPACE: ${{ github.workspace }}
      GITHUB_REPOSITORY: ${{ github.repository }}
      GITHUB_REF_NAME: ${{ github.ref_name }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Cortex CLI
        run: |
          set -euo pipefail
          echo "Attempting to download CLI from: $CORTEX_API_URL"
          
          # Ensure trailing slash before calling the endpoint
          if [[ "$CORTEX_API_URL" != */ ]]; then
            CORTEX_API_URL="${CORTEX_API_URL}/"
          fi

          crtx_resp=$(curl -sS --fail-with-body "${CORTEX_API_URL}public_api/v1/unified-cli/releases/download-link?os=linux&architecture=amd64" \
            -H "x-xdr-auth-id: ${CORTEX_API_KEY_ID}" \
            -H "Authorization: ${CORTEX_API_KEY}")

          crtx_url=$(echo "$crtx_resp" | jq -r ".signed_url")

          if [ "$crtx_url" = "null" ] || [ -z "$crtx_url" ]; then
            echo "Error: Failed to get Cortex CLI download URL."
            echo "Full response:"
            echo "$crtx_resp"
            exit 1
          fi

          echo "Downloading Cortex CLI..."
          curl -sS -o cortexcli "$crtx_url"
          chmod +x cortexcli

          echo "Cortex CLI downloaded successfully:"
          ./cortexcli --version

      - name: Run Cortex CLI Code Scan
        run: |
          chmod +x .github/scripts/run_cortex_scan.sh
          .github/scripts/run_cortex_scan.sh
