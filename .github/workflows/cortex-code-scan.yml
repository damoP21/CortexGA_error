# This workflow runs a Cortex code scan on your repository.
# It requires three secrets to be configured in your GitHub repository settings:
# CORTEX_API_KEY: Your Cortex API Key with "With upload results permissions".# This workflow runs a Cortex code scan on your repository.
# It requires three secrets to be configured in your GitHub repository settings:
# CORTEX_API_KEY: Your Cortex API Key with "With upload results permissions".
# CORTEX_API_KEY_ID: The ID for your Cortex API Key.
# CORTEX_API_URL: The API endpoint for your Cortex tenant (e.g., https://api-pcscortexcloud.xdr.us.paloaltonetworks.com/).

name: Cortex Code Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  cortex-code-scan:
    runs-on: ubuntu-latest

    env:
      CORTEX_API_KEY: ${{ secrets.CORTEX_API_KEY }}
      CORTEX_API_KEY_ID: ${{ secrets.CORTEX_API_KEY_ID }}
      CORTEX_API_URL: ${{ secrets.CORTEX_API_URL }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download Cortex CLI
      run: |
        if [ -z "${CORTEX_API_URL}" ]; then
          echo "Error: CORTEX_API_URL secret is not set or empty. Please configure it in repository settings."
          exit 1
        fi

        echo "Attempting to download CLI from: ${CORTEX_API_URL}"

        crtx_resp=$(curl -sS --fail-with-body "${CORTEX_API_URL}public_api/v1/unified-cli/releases/download-link?os=linux&architecture=amd64" \
          -H "x-xdr-auth-id: ${CORTEX_API_KEY_ID}" \
          -H "Authorization: ${CORTEX_API_KEY}")

        crtx_url=$(echo "$crtx_resp" | jq -r ".signed_url")
        if [ "$crtx_url" = "null" ] || [ -z "$crtx_url" ]; then
          echo "Error: Failed to get Cortex CLI download URL. The API response was:"
          echo "$crtx_resp"
          exit 1
        fi

        curl -sS -o cortexcli "$crtx_url"
        chmod +x cortexcli

        echo "Cortex CLI downloaded successfully:"
        ./cortexcli --version

    - name: Run Cortex CLI Code Scan
      shell: bash
      run: |
        # Explicitly export all required variables to the shell environment
        export CORTEX_API_KEY=${{ secrets.CORTEX_API_KEY }}
        export CORTEX_API_KEY_ID=${{ secrets.CORTEX_API_KEY_ID }}
        export GITHUB_WORKSPACE=${{ github.workspace }}
        export GITHUB_REPOSITORY=${{ github.repository }}
        export GITHUB_REF_NAME=${{ github.ref_name }}

        # Debugging Step: Print the environment variables to verify they are set
        echo "--- DEBUGGING: VERIFYING ENVIRONMENT VARIABLES ---"
        echo "CORTEX_API_KEY_ID is: $CORTEX_API_KEY_ID"
        echo "GITHUB_WORKSPACE is: $GITHUB_WORKSPACE"
        echo "GITHUB_REPOSITORY is: $GITHUB_REPOSITORY"
        echo "------------------------------------------------"

        # Make the script executable and run it
        chmod +x .github/scripts/run_cortex_scan.sh
        .github/scripts/run_cortex_scan.sh
        # Execute the script
        .github/scripts/run_cortex_scan.sh
