# This workflow runs a Cortex code scan on your repository.
# It requires three secrets to be configured in your GitHub repository settings:
# CORTEX_API_KEY: Your Cortex API Key
# CORTEX_API_KEY_ID: The ID for your Cortex API Key
# CORTEX_API_URL: The API endpoint for your Cortex tenant (e.g., https://api-ri.xdr.us.paloaltonetworks.com/)

name: Cortex Code Scan

on:
  push:
    branches: [ main ] # Triggers the scan on pushes to the main branch
  pull_request:
    branches: [ main ] # Triggers the scan on pull requests to the main branch
  workflow_dispatch: # Allows you to manually run the workflow from the Actions tab

jobs:
  cortex-code-scan:
    # This job runs on a GitHub-hosted runner
    runs-on: ubuntu-latest

    # Environment variables are sourced from GitHub secrets
    env:
      CORTEX_API_KEY: ${{ secrets.CORTEX_API_KEY }}
      CORTEX_API_KEY_ID: ${{ secrets.CORTEX_API_KEY_ID }}
      CORTEX_API_URL: ${{ secrets.CORTEX_API_URL }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download Cortex CLI
      run: |
        # Use API key to get a signed URL for the Cortex CLI download
        crtx_resp=$(curl -sS --fail-with-body "${CORTEX_API_URL}/public_api/v1/unified-cli/releases/download-link?os=linux&architecture=amd64" \
          -H "x-xdr-auth-id: ${CORTEX_API_KEY_ID}" \
          -H "Authorization: ${CORTEX_API_KEY}")

        # Extract the URL and download the CLI
        crtx_url=$(echo "$crtx_resp" | jq -r ".signed_url")
        if [ "$crtx_url" = "null" ] || [ -z "$crtx_url" ]; then
          echo "Error: Failed to get Cortex CLI download URL. Response was:"
          echo "$crtx_resp"
          exit 1
        fi

        curl -sS -o cortexcli "$crtx_url"
        chmod +x cortexcli

        # Verify the download
        echo "Cortex CLI downloaded successfully:"
        ./cortexcli --version

    - name: Run Cortex CLI Code Scan
      run: |
        ./cortexcli code scan \
          --directory "${{ github.workspace }}" \
          --repo-id "${{ github.repository }}" \
          --branch "${{ github.ref_name }}" \
          --source "GITHUB_ACTIONS" \
          --create-repo-if-missing
